{
  "config": {
    "title": "Entretien Développeur Web 2",
    "description": "Questions techniques avancées pour évaluer les compétences techniques des développeurs web (PHP, JavaScript, SQL, Docker, Git)",
    "spoilerMode": true,
    "difficulty": "Difficile",
    "questionCount": 40,
    "icon": "bi-briefcase-fill",
    "color": "from-red-400 to-pink-500",
    "category": "Coaching"
  },
  "questions": [
  {
    "id": 1,
    "question": "Qu'est-ce qu'un DTO (Data Transfer Object) en PHP ?",
    "choices": [
      "Un objet contenant uniquement de la logique métier",
      "Un objet simple pour transférer des données entre couches sans logique métier",
      "Un objet pour gérer les connexions à la base de données",
      "Un objet pour valider les formulaires"
    ],
    "correctAnswer": "Un objet simple pour transférer des données entre couches sans logique métier",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/php/php-original.svg"
  },
  {
    "id": 2,
    "question": "Que signifie une variable 'promoted' en PHP 8+ ?",
    "choices": [
      "Une variable globale",
      "Une variable déclarée et assignée directement dans le constructeur",
      "Une variable statique",
      "Une variable protégée"
    ],
    "correctAnswer": "Une variable déclarée et assignée directement dans le constructeur",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/php/php-original.svg"
  },
  {
    "id": 3,
    "question": "Dans la Clean Architecture, quelle est la règle fondamentale concernant les dépendances ?",
    "choices": [
      "Les dépendances pointent vers l'extérieur",
      "Les dépendances pointent vers l'intérieur (vers la logique métier)",
      "Il n'y a pas de règle sur les dépendances",
      "Les dépendances sont bidirectionnelles"
    ],
    "correctAnswer": "Les dépendances pointent vers l'intérieur (vers la logique métier)",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/php/php-original.svg"
  },
  {
    "id": 4,
    "question": "Que fait l'opérateur `??` en PHP ?",
    "choices": [
      "Concaténation de chaînes",
      "Opérateur null coalescing - retourne la valeur de droite si celle de gauche est null",
      "Comparaison stricte",
      "Opérateur ternaire"
    ],
    "correctAnswer": "Opérateur null coalescing - retourne la valeur de droite si celle de gauche est null",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/php/php-original.svg"
  },
  {
    "id": 5,
    "question": "Qu'est-ce qu'une fonction variadic en PHP ?",
    "choices": [
      "Une fonction récursive",
      "Une fonction acceptant un nombre variable d'arguments avec ...$args",
      "Une fonction anonyme",
      "Une fonction statique"
    ],
    "correctAnswer": "Une fonction acceptant un nombre variable d'arguments avec ...$args",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/php/php-original.svg"
  },
  {
    "id": 6,
    "question": "Quelle est la différence principale entre une classe abstraite et un trait en PHP ?",
    "choices": [
      "Une classe abstraite peut être instanciée, un trait non",
      "Un trait permet la réutilisation de code dans plusieurs classes, une classe abstraite sert de modèle pour l'héritage",
      "Il n'y a pas de différence",
      "Un trait est plus performant"
    ],
    "correctAnswer": "Un trait permet la réutilisation de code dans plusieurs classes, une classe abstraite sert de modèle pour l'héritage",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/php/php-original.svg"
  },
  {
    "id": 7,
    "question": "Dans Symfony, quelle est la priorité de chargement des fichiers d'environnement ?",
    "choices": [
      ".env puis .env.local",
      ".env.prod.local > .env.local > .env.prod > .env",
      ".env.local puis .env",
      "Tous sont chargés en même temps"
    ],
    "correctAnswer": ".env.prod.local > .env.local > .env.prod > .env",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/symfony/symfony-original.svg"
  },
  {
    "id": 8,
    "question": "Quelle est la différence entre `var`, `let` et `const` en JavaScript ?",
    "choices": [
      "Aucune différence, ce sont des synonymes",
      "var a une portée fonction avec hoisting, let/const ont une portée bloc, const est immutable",
      "let est pour les nombres, const pour les chaînes, var pour les objets",
      "var est obsolète, let et const sont identiques"
    ],
    "correctAnswer": "var a une portée fonction avec hoisting, let/const ont une portée bloc, const est immutable",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg"
  },
  {
    "id": 9,
    "question": "Qu'est-ce qu'une Promise en JavaScript ?",
    "choices": [
      "Une fonction synchrone",
      "Un objet représentant l'état d'une opération asynchrone (pending, fulfilled, rejected)",
      "Un type de variable",
      "Une méthode pour manipuler le DOM"
    ],
    "correctAnswer": "Un objet représentant l'état d'une opération asynchrone (pending, fulfilled, rejected)",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg"
  },
  {
    "id": 10,
    "question": "Quelle est la différence entre INNER JOIN et LEFT JOIN ?",
    "choices": [
      "Aucune différence",
      "INNER JOIN retourne les lignes présentes dans les deux tables, LEFT JOIN retourne toutes les lignes de la table gauche",
      "LEFT JOIN est plus rapide",
      "INNER JOIN inclut les valeurs NULL"
    ],
    "correctAnswer": "INNER JOIN retourne les lignes présentes dans les deux tables, LEFT JOIN retourne toutes les lignes de la table gauche",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/mysql/mysql-original.svg"
  },
  {
    "id": 11,
    "question": "Comment filtrer des résultats après un GROUP BY en SQL ?",
    "choices": [
      "Utiliser WHERE",
      "Utiliser HAVING",
      "Utiliser FILTER",
      "Utiliser LIMIT"
    ],
    "correctAnswer": "Utiliser HAVING",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/mysql/mysql-original.svg"
  },
  {
    "id": 12,
    "question": "Quelle est la différence entre DELETE et TRUNCATE ?",
    "choices": [
      "DELETE supprime des lignes spécifiques avec WHERE, TRUNCATE vide toute la table plus rapidement",
      "TRUNCATE est plus lent",
      "DELETE est irréversible, TRUNCATE non",
      "Il n'y a pas de différence"
    ],
    "correctAnswer": "DELETE supprime des lignes spécifiques avec WHERE, TRUNCATE vide toute la table plus rapidement",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/mysql/mysql-original.svg"
  },
  {
    "id": 13,
    "question": "Quelle est la différence entre PUT et PATCH dans une API REST ?",
    "choices": [
      "PUT modifie partiellement, PATCH remplace entièrement",
      "PUT remplace entièrement la ressource, PATCH ne modifie que les champs spécifiés",
      "Il n'y a pas de différence",
      "PATCH est plus sécurisé"
    ],
    "correctAnswer": "PUT remplace entièrement la ressource, PATCH ne modifie que les champs spécifiés",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg"
  },
  {
    "id": 14,
    "question": "Qu'est-ce que Docker Compose ?",
    "choices": [
      "Un éditeur de code",
      "Un outil orchestrant plusieurs conteneurs Docker via un fichier YAML",
      "Une base de données",
      "Un serveur web"
    ],
    "correctAnswer": "Un outil orchestrant plusieurs conteneurs Docker via un fichier YAML",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/docker/docker-original.svg"
  },
  {
    "id": 15,
    "question": "Quelle est la différence entre une Image et un Container Docker ?",
    "choices": [
      "Image est l'instance d'exécution, Container est le modèle",
      "Image est un modèle read-only, Container est une instance d'exécution d'une image",
      "Il n'y a pas de différence",
      "Container est plus léger qu'Image"
    ],
    "correctAnswer": "Image est un modèle read-only, Container est une instance d'exécution d'une image",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/docker/docker-original.svg"
  },
  {
    "id": 16,
    "question": "Qu'est-ce qu'un rebase en Git ?",
    "choices": [
      "Supprimer un commit",
      "Réappliquer les commits d'une branche sur une autre base, créant un historique linéaire",
      "Fusionner deux branches",
      "Créer une nouvelle branche"
    ],
    "correctAnswer": "Réappliquer les commits d'une branche sur une autre base, créant un historique linéaire",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/git/git-original.svg"
  },
  {
    "id": 17,
    "question": "À quoi sert `git commit --fixup` ?",
    "choices": [
      "Corriger le dernier commit",
      "Créer un commit destiné à être fusionné avec un commit précédent lors d'un rebase interactif",
      "Annuler un commit",
      "Changer l'auteur d'un commit"
    ],
    "correctAnswer": "Créer un commit destiné à être fusionné avec un commit précédent lors d'un rebase interactif",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/git/git-original.svg"
  },
  {
    "id": 18,
    "question": "Qu'est-ce qu'un analyseur de code statique ?",
    "choices": [
      "Un outil qui exécute le code pour trouver des erreurs",
      "Un outil analysant le code sans l'exécuter (PHPStan, Psalm) pour détecter erreurs et améliorations",
      "Un compilateur",
      "Un débogueur"
    ],
    "correctAnswer": "Un outil analysant le code sans l'exécuter (PHPStan, Psalm) pour détecter erreurs et améliorations",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/php/php-original.svg"
  },
  {
    "id": 19,
    "question": "Comment harmoniser deux implémentations similaires (PayPal, Stripe) en PHP ?",
    "choices": [
      "Copier-coller le code",
      "Créer une interface commune, implémenter pour chaque service, utiliser le pattern Strategy ou Factory",
      "Utiliser une seule implémentation",
      "Les traiter séparément sans abstraction"
    ],
    "correctAnswer": "Créer une interface commune, implémenter pour chaque service, utiliser le pattern Strategy ou Factory",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/php/php-original.svg"
  },
  {
    "id": 20,
    "question": "Qu'est-ce que l'autoloading en PHP ?",
    "choices": [
      "Chargement automatique des pages web",
      "Chargement automatique des classes PHP sans avoir à les inclure manuellement, utilise les namespaces et PSR-4",
      "Rechargement automatique de la page",
      "Sauvegarde automatique des fichiers"
    ],
    "correctAnswer": "Chargement automatique des classes PHP sans avoir à les inclure manuellement, utilise les namespaces et PSR-4",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/php/php-original.svg"
  },
  {
    "id": 21,
    "question": "Expliquez le principe de l'injection de dépendance",
    "choices": null,
    "correctAnswer": null,
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/php/php-original.svg"
  },
  {
    "id": 22,
    "question": "Qu'est-ce que l'early return et pourquoi l'utiliser ?",
    "choices": [
      "Retourner false rapidement",
      "Pratique consistant à retourner tôt dans une fonction pour éviter l'imbrication excessive et améliorer la lisibilité",
      "Optimisation des performances",
      "Gestion des erreurs"
    ],
    "correctAnswer": "Pratique consistant à retourner tôt dans une fonction pour éviter l'imbrication excessive et améliorer la lisibilité",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/php/php-original.svg"
  },
  {
    "id": 23,
    "question": "Décrivez votre approche pour déboguer une requête SQL lente",
    "choices": null,
    "correctAnswer": null,
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/mysql/mysql-original.svg"
  },
  {
    "id": 24,
    "question": "Quelles sont les principales limites de l'API REST ?",
    "choices": [
      "Trop sécurisé",
      "Over/under-fetching, multiple requêtes, pas de subscription temps réel, cache complexe",
      "Trop simple à utiliser",
      "Manque de documentation"
    ],
    "correctAnswer": "Over/under-fetching, multiple requêtes, pas de subscription temps réel, cache complexe",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg"
  },
  {
    "id": 25,
    "question": "Comment sécuriser une API REST ?",
    "choices": null,
    "correctAnswer": null,
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg"
  },
  {
    "id": 26,
    "question": "Qu'est-ce qu'un mock dans les tests unitaires ?",
    "choices": [
      "Un test cassé",
      "Un objet simulé qui remplace une dépendance pour tester en isolation",
      "Un framework de test",
      "Une méthode de test"
    ],
    "correctAnswer": "Un objet simulé qui remplace une dépendance pour tester en isolation",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/php/php-original.svg"
  },
  {
    "id": 27,
    "question": "Expliquez le pattern Repository",
    "choices": [
      "Pattern pour créer des objets",
      "Pattern encapsulant la logique d'accès aux données, interface entre la couche métier et la persistance",
      "Pattern pour observer des événements",
      "Pattern pour la validation"
    ],
    "correctAnswer": "Pattern encapsulant la logique d'accès aux données, interface entre la couche métier et la persistance",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/php/php-original.svg"
  },
  {
    "id": 28,
    "question": "Comment optimiser les performances d'une application web ?",
    "choices": null,
    "correctAnswer": null,
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg"
  },
  {
    "id": 29,
    "question": "Qu'est-ce que `git bisect` et dans quel contexte l'utiliser ?",
    "choices": [
      "Diviser un fichier en deux",
      "Recherche dichotomique pour trouver le commit qui a introduit un bug",
      "Fusionner deux branches",
      "Créer deux branches parallèles"
    ],
    "correctAnswer": "Recherche dichotomique pour trouver le commit qui a introduit un bug",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/git/git-original.svg"
  },
  {
    "id": 30,
    "question": "À quoi servent les volumes Docker ?",
    "choices": [
      "À augmenter la RAM",
      "Stockage persistant des données en dehors du cycle de vie du conteneur",
      "À accélérer le conteneur",
      "À sécuriser le conteneur"
    ],
    "correctAnswer": "Stockage persistant des données en dehors du cycle de vie du conteneur",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/docker/docker-original.svg"
  },
  {
    "id": 31,
    "question": "Décrivez votre approche pour maintenir une application legacy",
    "choices": null,
    "correctAnswer": null,
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/php/php-original.svg"
  },
  {
    "id": 32,
    "question": "Qu'est-ce que le responsive design et comment l'implémenter ?",
    "choices": [
      "Design qui répond rapidement",
      "Adaptation de l'affichage aux différents écrans via media queries CSS, grilles flexibles, images adaptatives",
      "Design avec beaucoup de couleurs",
      "Design minimaliste"
    ],
    "correctAnswer": "Adaptation de l'affichage aux différents écrans via media queries CSS, grilles flexibles, images adaptatives",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/css3/css3-original.svg"
  },
  {
    "id": 33,
    "question": "Expliquez la différence entre jQuery et JavaScript natif",
    "choices": [
      "jQuery est plus rapide",
      "jQuery simplifie la manipulation DOM et AJAX, JavaScript natif est plus performant sans dépendance",
      "Il n'y a pas de différence",
      "JavaScript natif est obsolète"
    ],
    "correctAnswer": "jQuery simplifie la manipulation DOM et AJAX, JavaScript natif est plus performant sans dépendance",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg"
  },
  {
    "id": 34,
    "question": "Comment gérer la priorité entre plusieurs tâches urgentes ?",
    "choices": null,
    "correctAnswer": null,
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg"
  },
  {
    "id": 35,
    "question": "Qu'est-ce que un index en base de données et quand l'utiliser ?",
    "choices": [
      "Un numéro de ligne",
      "Une structure optimisant les recherches, à utiliser sur les colonnes fréquemment utilisées dans WHERE, JOIN, ORDER BY",
      "Une sauvegarde de table",
      "Une contrainte de validation"
    ],
    "correctAnswer": "Une structure optimisant les recherches, à utiliser sur les colonnes fréquemment utilisées dans WHERE, JOIN, ORDER BY",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/mysql/mysql-original.svg"
  },
  {
    "id": 36,
    "question": "Expliquez votre démarche face à une erreur 500 en production",
    "choices": null,
    "correctAnswer": null,
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/php/php-original.svg"
  },
  {
    "id": 37,
    "question": "Qu'est-ce que `git bisect` et dans quel contexte l'utiliser ?",
    "choices": [
      "Diviser un fichier en deux",
      "Recherche dichotomique pour trouver le commit qui a introduit un bug",
      "Fusionner deux branches",
      "Créer deux branches parallèles"
    ],
    "correctAnswer": "Recherche dichotomique pour trouver le commit qui a introduit un bug",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/git/git-original.svg"
  },
  {
    "id": 38,
    "question": "Comment cibler une implémentation particulière d'un service en Symfony ?",
    "choices": [
      "Utiliser des variables globales",
      "Configuration Symfony, tags de service, alias, ou injection par nom de service spécifique",
      "Modifier le code source",
      "Utiliser des commentaires"
    ],
    "correctAnswer": "Configuration Symfony, tags de service, alias, ou injection par nom de service spécifique",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/symfony/symfony-original.svg"
  },
  {
    "id": 39,
    "question": "Décrivez les principaux Design Patterns que vous utilisez",
    "choices": null,
    "correctAnswer": null,
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/php/php-original.svg"
  },
  {
    "id": 40,
    "question": "À quoi servent les networks Docker ?",
    "choices": [
      "À accélérer les conteneurs",
      "Permettent la communication entre conteneurs de manière isolée et sécurisée",
      "À sauvegarder les données",
      "À monitorer les performances"
    ],
    "correctAnswer": "Permettent la communication entre conteneurs de manière isolée et sécurisée",
    "imageUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/docker/docker-original.svg"
  }
]
}